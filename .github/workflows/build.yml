name: Build Android Kernel for Enchilada or Fajita

on:
  workflow_dispatch:
    inputs:
      pseudo_make:
        description: "Pseudo Make"
        type: boolean
        default: false


jobs:
  
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      
      - name: Cloning Sources and Toolchain
        run: |
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
          sudo apt update -y
          sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3 gcc-9-aarch64-linux-gnu gcc-9-arm-linux-gnueabi gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi 
          sudo apt clean
          wget "https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz"
          xz -d gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz
          tar xf gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar
          mkdir -p ~/toolchains/gcc
          cp -r gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu/* ~/toolchains/gcc
          rm -rf gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz
          mkdir ~/toolchains/clang
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/a71fa4c09d7109d611ee63964fc9fca58fee38cd/clang-r450784d.tar.gz -O ~/toolchains/clang/clang-r450784d.tar.gz
          tar -xvzf ~/toolchains/clang/clang-r450784d.tar.gz  -C ~/toolchains/clang
          git clone https://github.com/uwu-gl/android_kernel_oneplus_msm8998 --depth=1 -b lineage-21 ~/android-kernel

      - name: Compiling Kernel
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export PATH=~/toolchains/clang/bin:~/toolchains/gcc/bin:$PATH
          export CROSS_COMPILE=aarch64-none-linux-gnu-
          export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          output_dir=out
          cd ~/android-kernel
          make O="$output_dir" lineage_oneplus5_defconfig
          make -j $(nproc) O="$output_dir" CC=clang
          
      - name: Resource organization
        run: |
          mkdir -p out/arch/arm64/boot/
          echo 123 > out/arch/arm64/boot/Image
          echo 123 > out/arch/arm64/boot/Image.gz
          echo 123 > out/arch/arm64/boot/Image.gz-dtb
          curl -Lo AnyKernel3.zip https://github.com/Grill-Laux/AnyKernel3/archive/refs/heads/master.zip
          unzip AnyKernel3.zip
          cd AnyKernel3-master
          cat > anykernel.sh <<EOF
          properties() { '
          do.devicecheck=0
          do.cleanup=1
          '; }
          block=auto
          is_slot_device=auto
          . tools/ak3-core.sh
          split_boot
          flash_boot
          EOF
          cp ~/android-kernel/out/arch/arm64/boot/Image.gz-dtb .
          zip -r boot.zip * -x .git README.md *placeholder
          ls
#这里改下哦 把所有需要修改的路径和image格式都改下

#      - name: Upload AnyKernel3
#        uses: actions/upload-artifact@v3
#        with:
#          name: AnyKernel3_enchilada-lineageos-${{ env.BUILD_TIME }}
#          path: anykernel/*
          
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: LineageOS_oneplus5_${{ needs.check_kernelsu_update.outputs.kernelsu_release }}_${{ env.BUILD_TIME }}_manual
          body: |
            Device:
            op5/op5t
          files: |
            AnyKernel3-master/boot.zip
