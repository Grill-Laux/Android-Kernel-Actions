name: Build Android Kernel for Enchilada or Fajita

on:
  workflow_dispatch:
    inputs:
      pseudo_make:
        description: "Pseudo Make"
        type: boolean
        default: false

  schedule:
    - cron: "* 8,12,15,18,22 * * *"

jobs:
  check_kernelsu_update:
    name: check kernelsu update
    runs-on: ubuntu-latest
    steps:
      - name: install common package
        run: |
          sudo apt update
          sudo apt install -y curl jq
      - name: check kernelsu release
        id: check_kernelsu_release
        run: |
          kernelsu_release=`curl https://api.github.com/repos/wxt1221/KernelSU/releases/latest | jq -r .tag_name`
          local_release=`curl --header 'authorization: Bearer ${{ github.token }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name`
          echo $kernelsu_release
          echo $local_release
          echo kernelsu_release=$kernelsu_release >> $GITHUB_OUTPUT
          echo local_release=$local_release >> $GITHUB_OUTPUT
    outputs:
      kernelsu_release: ${{ steps.check_kernelsu_release.outputs.kernelsu_release }}
      local_release: ${{ steps.check_kernelsu_release.outputs.local_release }}

  build:
    needs: check_kernelsu_update
    #if: needs.check_kernelsu_update.outputs.kernelsu_release != needs.check_kernelsu_update.outputs.local_release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Cloning Sources and Toolchain
        run: |
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
          sudo apt update -y
          sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
          sudo apt clean
          git clone https://github.com/Grill-Laux/android_kernel_oneplus_sdm845 --recursive --depth=1 android-kernel
          git clone https://github.com/Grill-Laux/android_prebuilts_misc_linux-x86_dtc_dtc ~/toolchains/dtc
          git clone https://github.com/LineageOS/android_prebuilts_clang_kernel_linux-x86_clang-r416183b --depth=1 --single-branch --no-tags ~/toolchains/clang
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/toolchains/aarch64-linux-android-4.9
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/toolchains/arm-linux-androideabi-4.9
#这里要修改上自己的clang编译器喵
     
      - name: Compiling Kernel
        run: |
          # DTC_EXT=~/toolchains/dtc
          CLANG=~/toolchains/clang/bin
          GCC32=~/toolchains/arm-linux-androideabi-4.9/bin
          GCC64=~/toolchains/aarch64-linux-android-4.9/bin
          PATH=$CLANG:$GCC64:$GCC32:$PATH
          export PATH
          export ARCH=arm64
          export CLANG_TRIPLE=aarch64-linux-gnu
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          output_dir=out
          pushd android-kernel
          chmod +x $GITHUB_WORKSPACE/android-kernel/dtc/dtc
          export DTC_EXT=$GITHUB_WORKSPACE/android-kernel/dtc/dtc
          make O="$output_dir" vendor/enchilada_defconfig
          make -j $(nproc) O="$output_dir" CC=clang
          popd
          
      - name: Resource organization
        run: |
          mkdir -p out/arch/arm64/boot/
          echo 123 > out/arch/arm64/boot/Image
          echo 123 > out/arch/arm64/boot/Image.gz
          echo 123 > out/arch/arm64/boot/Image.gz-dtb
          curl -Lo AnyKernel3.zip https://github.com/Grill-Laux/AnyKernel3/archive/refs/heads/master.zip
          unzip AnyKernel3.zip
          cd AnyKernel3-master
          cat > anykernel.sh <<EOF
          properties() { '
          do.devicecheck=0
          do.cleanup=1
          device.name1=enchilada
          '; }
          block=auto
          is_slot_device=auto
          . tools/ak3-core.sh
          split_boot
          flash_boot
          EOF
          cp $GITHUB_WORKSPACE/android-kernel/out/arch/arm64/boot/Image-dtb .
          zip -r boot.zip * -x .git README.md *placeholder
          ls
#这里改下喵 主人需要把image格式以及内核defconfig配置改下喵
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: LineageOS_4.19_${{ needs.check_kernelsu_update.outputs.kernelsu_release }}_${{ env.BUILD_TIME }}_test
          body: |
            Device:
            enchilada/fajita

            KernelSource:
            https://github.com/OnePlus-sdm845-4-19/android_kernel_oneplus_sdm845
            
            WARNING!!
            THIS KERNEL MUST WORK WITH 4.19-SUPPORTED LINEAGEOS!!!OR YOUR DEVICE WILL NOT WORK!!!

            BuildTime
            ${{ env.BUILD_TIME }}

            Supported:
            None. Test build.
          files: |
            AnyKernel3-master/boot.zip
